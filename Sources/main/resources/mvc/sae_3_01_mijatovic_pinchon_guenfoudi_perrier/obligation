import javafx.scene.shape.Line;
import javafx.scene.shape.Polygon;
import javafx.scene.transform.Rotate;

public class Arrow extends Line {
    private static final double defaultArrowHeadSize = 5.0;
    private double arrowHeadSize = defaultArrowHeadSize;
    private Polygon arrowHead;
    private Rotate r;
    private Line line;

    public Arrow(double startX, double startY, double endX, double endY) {
        super(startX, startY, endX, endY);

        line = this;
        arrowHead = new Polygon();
        arrowHead.getPoints().addAll(new Double[]{
                0.0, 0.0,
                - arrowHeadSize, arrowHeadSize,
                - arrowHeadSize, - arrowHeadSize
        });
        arrowHead.setFill(javafx.scene.paint.Color.BLACK);

        r = new Rotate();
        r.setPivotX(0);
        r.setPivotY(0);
        r.setAngle(0);
        arrowHead.getTransforms().addAll(r);
    }

    public void setArrowHeadSize(double arrowHeadSize) {
        this.arrowHeadSize = arrowHeadSize;
        arrowHead.getPoints().clear();
        arrowHead.getPoints().addAll(new Double[]{
                0.0, 0.0,
                - arrowHeadSize, arrowHeadSize,
                - arrowHeadSize, - arrowHeadSize
        });
    }

    public void update() {
        double slope = (line.getStartY() - line.getEndY()) / (line.getStartX() - line.getEndX());
        double angle = Math.atan(slope);

        // Rotate the arrow based on the slope of the line
        r.setAngle(Math.toDegrees(angle));

        // Move the arrow to the end of the line
        double sin = Math.sin(angle);
        double cos = Math.cos(angle);
        double x = line.getEndX() - (arrowHeadSize * cos);
        double y = line.getEndY() - (arrowHeadSize * sin);
        arrowHead.setLayoutX(x);
        arrowHead.setLayoutY(y);
    }
}
